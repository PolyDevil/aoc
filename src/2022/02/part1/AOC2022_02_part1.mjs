// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Pervasives from "rescript/lib/es6/pervasives.js";

function toState(input) {
  switch (input) {
    case "A" :
    case "X" :
        return /* Rock */0;
    case "B" :
    case "Y" :
        return /* Paper */1;
    case "C" :
    case "Z" :
        return /* Scissors */2;
    default:
      return Pervasives.failwith("incorrect value");
  }
}

function score(state) {
  return state + 1 | 0;
}

function play(s1, s2) {
  switch (s1) {
    case /* Rock */0 :
        switch (s2) {
          case /* Rock */0 :
              return {
                      TAG: /* Draw */1,
                      _0: /* Rock */0
                    };
          case /* Paper */1 :
              return {
                      TAG: /* Win */0,
                      _0: /* Paper */1
                    };
          case /* Scissors */2 :
              return {
                      TAG: /* Loss */2,
                      _0: /* Scissors */2
                    };
          
        }
    case /* Paper */1 :
        switch (s2) {
          case /* Rock */0 :
              return {
                      TAG: /* Loss */2,
                      _0: /* Rock */0
                    };
          case /* Paper */1 :
              return {
                      TAG: /* Draw */1,
                      _0: /* Paper */1
                    };
          case /* Scissors */2 :
              return {
                      TAG: /* Win */0,
                      _0: /* Scissors */2
                    };
          
        }
    case /* Scissors */2 :
        switch (s2) {
          case /* Rock */0 :
              return {
                      TAG: /* Win */0,
                      _0: /* Rock */0
                    };
          case /* Paper */1 :
              return {
                      TAG: /* Loss */2,
                      _0: /* Paper */1
                    };
          case /* Scissors */2 :
              return {
                      TAG: /* Draw */1,
                      _0: /* Scissors */2
                    };
          
        }
    
  }
}

function outcome(t) {
  switch (t.TAG | 0) {
    case /* Win */0 :
        return 6 + (t._0 + 1 | 0) | 0;
    case /* Draw */1 :
        return 3 + (t._0 + 1 | 0) | 0;
    case /* Loss */2 :
        return 0 + (t._0 + 1 | 0) | 0;
    
  }
}

function make(s1, s2) {
  return outcome(play(toState(s1), toState(s2)));
}

var Game = {
  toState: toState,
  score: score,
  play: play,
  outcome: outcome,
  make: make
};

function make$1(t) {
  return t.reduce((function (prev, param) {
                return prev + make(param[0], param[1]) | 0;
              }), 0);
}

var $$Array;

export {
  $$Array ,
  Game ,
  make$1 as make,
}
/* No side effect */
